const fs = require('fs');
const cc = require('cli-color')
const file = './epm.package.json'
var epmj_pre = fs.readFileSync(file)
var epmj = JSON.parse(epmj_pre.toString())
console.log('')
console.log(cc.greenBright('所需 EPM 版本:'), epmj.use.usePackageConfig['epm.ForVersion'])
console.log(cc.greenBright('适用平台:'), epmj.use.usePackageConfig['epm.ForPlatform'])
console.log('')
console.log(cc.greenBright('适用于系统发行版:'))
console.log(cc.green('    Win32:'))
console.log(cc.green('        Release ID:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].win32.id)
console.log(cc.green('        适用架构:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].win32.forArch)
console.log(cc.green('        是否向前兼容:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].win32.forwardCompatible)
console.log('')
console.log(cc.green('    Linux:'))
console.log(cc.green('        Release ID:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].linux.id)
console.log(cc.green('        适用架构:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].linux.forArch)
console.log(cc.green('        是否向前兼容:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].linux.forwardCompatible)
console.log('')
console.log(cc.green('    Darwin'))
console.log(cc.green('        Release ID:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].darwin.id)
console.log(cc.green('        适用架构:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].darwin.forArch)
console.log(cc.green('        是否向前兼容:'), epmj.use.usePackageConfig['epm.ForSystemRelease'].darwin.forwardCompatible)
console.log('')
console.log(cc.greenBright('是否兼容 Edgeless Plug-in Loader / EPT:'), epmj.use.usePackageConfig['epm.EdgelessCompatible'])
console.log(cc.green('    EPT 配置:', ))
console.log(cc.green('       包名称:'), epmj.use.useEdgelessCompatibleConfig['edgeless.extension.Name'])
console.log(cc.green('       包版本:'), epmj.use.useEdgelessCompatibleConfig['edgeless.extension.Version'])
console.log(cc.green('       包作者:'), epmj.use.useEdgelessCompatibleConfig['edgeless.extension.Author'])
console.log(cc.green('       包简介:'), epmj.use.useEdgelessCompatibleConfig['edgeless.extension.Intro'])
console.log(cc.green('       FullName:'), epmj.use.useEdgelessCompatibleConfig['edgeless.extension.Name'] + '_' + epmj.use.useEdgelessCompatibleConfig['edgeless.extension.Version'] + '_' + epmj.use.useEdgelessCompatibleConfig['edgeless.extension.Author'])
console.log('')
console.log(cc.greenBright('EPM 包设置:'))
console.log(cc.green('   包名称:'), epmj.packageConfig.name)
console.log(cc.green('   友好名称:'), epmj.packageConfig.friendlyName)
console.log(cc.green('   包描述:'), epmj.packageConfig.description)
console.log('')
console.log(cc.green('   包版本:'))
console.log(cc.green('       版本号:'), epmj.packageConfig.version.version)
console.log(cc.green('       版本码:'), epmj.packageConfig.version.versionCode)
console.log('')
console.log(cc.green('   开发依赖:'))
console.log(cc.green('       列表:'))
for (let i = 1; i < epmj.packageConfig.devDependencies.length; i++) {
    console.log(cc.green('       依赖包名:'), epmj.packageConfig.devDependencies[i].dependencyName)
    console.log(cc.green('       依赖版本:'), epmj.packageConfig.devDependencies[i].dependencyVersion)
    console.log('')
}
console.log(cc.green('       子选项:'))
console.log(cc.green('           计数器:'), epmj.packageConfig.devDependencies[0].__Counter__)
console.log(cc.green('           执行标志:'), epmj.packageConfig.devDependencies[0].__Flags__)
console.log('')
console.log(cc.green('   产品依赖:'))
console.log(cc.green('       列表:'))
for (let i = 1; i < epmj.packageConfig.productionDependencies.length; i++) {
    console.log(cc.green('       依赖包名:'), epmj.packageConfig.productionDependencies[i].dependencyName)
    console.log(cc.green('       依赖版本:'), epmj.packageConfig.productionDependencies[i].dependencyVersion)
    console.log('')
}
console.log(cc.green('       子选项:'))
console.log(cc.green('           计数器:'), epmj.packageConfig.productionDependencies[0].__Counter__)
console.log(cc.green('           执行标志:'), epmj.packageConfig.productionDependencies[0].__Flags__)